apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: tensorflow-server
metadata:
  annotations:
    description: Tensorflow Demo Endport Server
    tags: tensorflow,oia,demo
    iconClass: icon-github
  name: tensorflow-server
objects:
  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        appName: '${APPLICATION_NAME}'
        appid: 'tf-app-server-${APPLICATION_NAME}'
      name: '${APPLICATION_NAME}'
  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        appName: '${APPLICATION_NAME}'
        appid: 'tf-app-server-${APPLICATION_NAME}'
      name: '${APPLICATION_NAME}-s2i'
    spec:
      tags:
        - from:
            kind: DockerImage
            name: 'radanalyticsio/tensorflow-serving-s2i:latest'
          name: latest
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      labels:
        appName: '${APPLICATION_NAME}'
        appid: 'tf-app-server-${APPLICATION_NAME}'
      name: '${APPLICATION_NAME}'
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: '${APPLICATION_NAME}:latest'
      source:
        contextDir: '${SOURCE_DIRECTORY}'
        git:
          uri: '${SOURCE_REPOSITORY}'
        type: Git
      strategy:
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: '${APPLICATION_NAME}-s2i:latest'
        type: Source
      triggers:
        - type: ConfigChange
        - type: ImageChange
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        appName: '${APPLICATION_NAME}'
        appid: 'tf-app-server-${APPLICATION_NAME}'
      name: '${APPLICATION_NAME}'
    spec:
      replicas: 1
      selector:
        deploymentconfig: '${APPLICATION_NAME}'
      strategy:
        type: Rolling
      template:
        metadata:
          labels:
            appName: '${APPLICATION_NAME}'
            appid: 'tf-app-server-${APPLICATION_NAME}'
            deploymentconfig: '${APPLICATION_NAME}'
        spec:
          containers:
            - image: '${APPLICATION_NAME}:latest'
              name: '${APPLICATION_NAME}'
              ports:
                - containerPort: 6006
                  protocol: TCP
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - '${APPLICATION_NAME}'
            from:
              kind: ImageStreamTag
              name: '${APPLICATION_NAME}:latest'
          type: ImageChange
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        appName: '${APPLICATION_NAME}'
        appid: 'tf-app-server-${APPLICATION_NAME}'
      name: '${APPLICATION_NAME}'
    spec:
      ports:
        - name: 6006-tcp
          port: 6006
          protocol: TCP
          targetPort: 6006
      selector:
        deploymentconfig: '${APPLICATION_NAME}'
parameters:
  - description: The name of the application.
    from: '[a-zA-Z0-9]{10}'
    name: APPLICATION_NAME
    required: true
    value: tensorflow-demo
  - description: Git repository for source.
    name: SOURCE_REPOSITORY
    required: true
    value: https://github.com/sub-mod/mnist-models
  - description: Sub-directory of repository for source files.
    name: SOURCE_DIRECTORY
