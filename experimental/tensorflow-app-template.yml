apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: tensorflow-web-ui
metadata:
  annotations:
    description: TensorFlow Demo Web UI
    tags: tensorflow,oia,demo
    iconClass: icon-github
  name: tensorflow-ui
objects:
  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        appid: 'mnist-app-${APPLICATION_NAME}'
      name: '${APPLICATION_NAME}'
    spec:
      tags:
        - from:
            kind: DockerImage
            name: 'submod/mnist-app:latest'
          name: latest
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        appid: 'mnist-app-${APPLICATION_NAME}'
      name: '${APPLICATION_NAME}'
    spec:
      replicas: 1
      selector:
        deploymentconfig: '${APPLICATION_NAME}'
      strategy:
        type: Rolling
      template:
        metadata:
          labels:
            appid: 'mnist-app-${APPLICATION_NAME}'
            deploymentconfig: '${APPLICATION_NAME}'
        spec:
          containers:
            - env:
                - name: PREDICTION_HOST1
                  value: '${PREDICTION_SERVICE1}'
                - name: PREDICTION_HOST2
                  value: '${PREDICTION_SERVICE2}'
                - name: PREDICTION_PORT1
                  value: '6006'
                - name: PREDICTION_PORT2
                  value: '6006'
              image: '${APPLICATION_NAME}:latest'
              name: '${APPLICATION_NAME}'
              ports:
                - containerPort: 8000
                  protocol: TCP
                - containerPort: 5000
                  protocol: TCP
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - '${APPLICATION_NAME}'
            from:
              kind: ImageStreamTag
              name: '${APPLICATION_NAME}:latest'
          type: ImageChange
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        appid: 'mnist-app-${APPLICATION_NAME}'
      name: '${APPLICATION_NAME}'
    spec:
      ports:
        - name: 8000-tcp
          port: 8000
          protocol: TCP
          targetPort: 8000
        - name: 5000-tcp
          port: 5000
          protocol: TCP
          targetPort: 5000
      selector:
        deploymentconfig: '${APPLICATION_NAME}'
  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        appid: 'mnist-app-${APPLICATION_NAME}'
      name: '${APPLICATION_NAME}'
    spec:
      host: ''
      port:
        targetPort: 8000-tcp
      to:
        kind: Service
        name: '${APPLICATION_NAME}'
        weight: 100
parameters:
  - description: The name of the application.
    from: '[a-zA-Z0-9]{10}'
    name: APPLICATION_NAME
    required: true
    value: tensorflow-demo
  - description: Service name of prediction endpoint(regression).
    from: '[a-zA-Z0-9]'
    name: PREDICTION_SERVICE1
    required: true
    value: tf-reg
  - description: Service name of prediction endpoint(cnn).
    from: '[a-zA-Z0-9]'
    name: PREDICTION_SERVICE2
    required: true
    value: tf-cnn
