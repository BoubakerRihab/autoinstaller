---
# tasks file for openstack-hypervisor
# This creates all of the resources needed to build out an entire OCP instance on openstack-hypervisor
# including the networking, ssh-keys, etc.
- name: ensure module dependencies are installed
  become: yes
  pip:
    name: "{{ item }}"
    state: present
  with_items:
  - shade
  - futures
  - jmespath

- name: ensure keypair is created in OpenStack
  os_keypair:
    auth:
      auth_url: "{{ auth_creds.url }}"
      username: "{{ auth_creds.username }}"
      password: "{{ auth_creds.password }}"
      project_name: "{{ auth_creds.project }}"
    name: "{{ ssh_key.name }}"
    public_key_file: "{{ ssh_key.file_public }}"

- name: create private network
  os_network:
    name: "{{ private_network.name }}"
    auth:
      auth_url: "{{ auth_creds.url }}"
      username: "{{ auth_creds.username }}"
      password: "{{ auth_creds.password }}"
      project_name: "{{ auth_creds.project }}"
    project: "{{ auth_creds.project }}"
    state: present
    wait: yes

- name: create subnet on private network
  os_subnet:
    auth:
      auth_url: "{{ auth_creds.url }}"
      username: "{{ auth_creds.username }}"
      password: "{{ auth_creds.password }}"
      project_name: "{{ auth_creds.project }}"
    name: "{{ private_network.subnet_name }}"
    network_name: "{{ private_network.name }}"
    state: present
    cidr: "{{ private_network.subnet_cidr }}"
    dns_nameservers:
      - "{{ private_network.subnet_dns[0] }}"
      - "{{ private_network.subnet_dns[1] }}"

- name: create router for project
  os_router:
    auth:
      auth_url: "{{ auth_creds.url }}"
      username: "{{ auth_creds.username }}"
      password: "{{ auth_creds.password }}"
      project_name: "{{ auth_creds.project }}"
    state: present
    name: "{{ external_network.router_name }}"
    network: "{{ external_network.name }}"
    interfaces:
      - "{{ private_network.name }}"
