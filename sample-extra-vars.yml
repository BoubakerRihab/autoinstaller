# --------------------
# Deployment Options
# --------------------
#
# use nip.io for hostnames and domain
var_nip_io: true
# if var_nip_io is set to false, you need to
# provide a domain for the hostnames
var_domain: example.com
# The SSH key to use.
# For KVM, it's copied over
# For OpenStack and AWS, it's used to upload the public key with name of `var_ssh_key_name`
var_ssh_key_file: /home/jduncan/.ssh/id_rsa
# SSH key name in OpenStack or AWS to use
var_ssh_key_name: jduncan_key
# Deployment platform
# Current Options:
# - kvm
# - openstack
# - aws
var_deployment_type: aws
# deploy openshift or just prepare the systems
# if set to false, the deployment playbook isn't executed.
var_deploy_openshift: true
# version of OpenShift to deploy. Options:
# - origin
# - openshift-enterprise
var_openshift_type: openshift-enterprise
# For AWS, the AMIs are mapped for each EC2 region, so this variable isn't used
# For OpenStack, specify the image ID you want to use, for example 7e9fb03c-734b-4ad2-9244-df8b9c2e2b6e
#   This image ID will be unique to your OpenStack platform
# For KVM, specify the path to the CentOS or RHEL Cloud image on your local disk
#   for example: /home/jduncan/Downloads/CentOS-7-x86_64-GenericCloud-1707.qcow2
#   CentOS cloud image: https://cloud.centos.org/centos/7/images/CentOS-7-x86_64-GenericCloud-1801-01.qcow2
#   RHEL cloud image: download from https://access.redhat.com
var_image: 7e9fb03c-734b-4ad2-9244-df8b9c2e2b6e
# For AWS, specify the region you want to deploy in.
# For OpenStack or KVM, use the region 'all'
var_region: us-east-1
# Security groups are used for AWS and OpenStack
# This group is created if it doesn't already exist
var_sec_group: openshift
# Flavor to use for instances on AWS / OpenStack
# recommended minimum: m4.large
var_flavor: m4.large

### EXPERIMENTAL OPTIONS ###
# Deploy metrics or not
var_deploy_metrics: false
# Deploy the service catalog or not
var_deploy_service_catalog: true
# Deploy CNS (Container Native Storage) or not
var_deploy_cns: false
# Set up htpasswd and make it the default provider
# This will set up a 'dev' and 'admin' user automaticall with user/pass matching
# the admin user will have cluster-admin privs
var_deploy_httpd_auth: false
